
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
							PHP INTERACTION WITH DATABASE:

// ~ get count for a specific day ~
function getCount($date)
{
	global $COMMON;
	$sql = "SELECT COUNT(Count) AS total FROM `WalkingCounterDatabase` WHERE `Date` LIKE '$date'";
	$rs = $COMMON->executeQuery($sql, $_SERVER["PHP_SELF"]);

	$row = $rs->fetch(PDO::FETCH_ASSOC);
	return $row['total'];
}

// ~ gets the number of rows ~
function getTotalRows()
{
	global $COMMON;
	$sql = "SELECT COUNT(Count) AS total FROM `WalkingCounterDatabase`";
	$rs = $COMMON->executeQuery($sql, $_SERVER["PHP_SELF"]);
	
	$row = $rs->fetch(PDO::FETCH_ASSOC);
	return $row['total'];
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
								USER INPUT VALIDATION:

	Most of the information we are providing to the person who will be looking 
	at the data will be provided when the website is loaded. For example, we are 
	showing a graph of hourly activity and the data for that will be pulled from 
	the database when you open the page. Other data such as the average people
	per day and the amount of people on that day will follow suit. The website 
	user will only be able to put in a range with dates and times as endpoints
	to find more information about the data gathered in the specified range.
	This means the only input we need to worry about is making sure the date and
	time are valid inputs. Luckily, HTML5 provides input types that does this 
	for us with the date type.

<html>
	<body>
		<form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>" method='post' name='form2'>
			<span style="padding-right: 0.5em"><b>Start D & T:</b></span><input type='date' name='queryFirstDate'><input type="time" name="queryFirstTime"><br>
			<span style="padding-right: 0.5em"><b>Final D & T:</b></span><input type="date" name="queryLastDate"><input type="time" name="queryLastTime"><br>
			<input type='submit' name='submit' value='submit'>
		</form>
	</body>
</html>

	The date type restricts the input to only valid dates and even provides a calander 
	to make the data input easier for the user. The time type restrics the input to 
	only valid 12 hour times, with an AM/PM selection. Our test cases then boil down to a 
	series of dates and time, as that is all the user will be able to input. Here are some 
	example dates that a user might input.

Not accepted by the date input type:
00/00/0000
afsdf$#$@
13/93/2001
20:72 AM
as:df ef

Accepted:
01/12/1997
12/31/99999
05/02/0001
01:01 AM
11:59 PM